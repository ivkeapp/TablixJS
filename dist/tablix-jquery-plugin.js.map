{"version":3,"file":"tablix-jquery-plugin.js","sources":["../src/jquery/plugin-standalone.js"],"sourcesContent":["/**\r\n * TablixJS jQuery Plugin (Standalone)\r\n * This file provides jQuery integration for TablixJS when TablixJS is already loaded\r\n * \r\n * Usage:\r\n * 1. Load TablixJS core first\r\n * 2. Load jQuery\r\n * 3. Load this plugin file\r\n * \r\n * The plugin will automatically register itself if both TablixJS and jQuery are available.\r\n */\r\n\r\n(function() {\r\n  'use strict';\r\n  \r\n  // Check if we're in a browser environment\r\n  const isWindow = typeof window !== 'undefined';\r\n  const isGlobal = typeof global !== 'undefined';\r\n  \r\n  // Get jQuery from various sources\r\n  const $ = (isWindow && (window.jQuery || window.$)) || \r\n           (isGlobal && (global.jQuery || global.$));\r\n  \r\n  if (!$) {\r\n    // jQuery not available - this is expected in some scenarios\r\n    return;\r\n  }\r\n\r\n  // Get TablixJS from various sources\r\n  let TablixJS = null;\r\n  \r\n  if (isWindow) {\r\n    TablixJS = window.TablixJS || window.Table;\r\n  } else if (isGlobal) {\r\n    TablixJS = global.TablixJS || global.Table;\r\n  }\r\n  \r\n  // If TablixJS is not available globally, try to require it (Node.js/CommonJS)\r\n  if (!TablixJS && typeof require === 'function') {\r\n    try {\r\n      TablixJS = require('tablixjs');\r\n      // Could be default export or named export\r\n      TablixJS = TablixJS.default || TablixJS.Table || TablixJS;\r\n    } catch (e) {\r\n      // Could not require TablixJS\r\n    }\r\n  }\r\n  \r\n  if (!TablixJS) {\r\n    console.warn('TablixJS jQuery plugin: TablixJS is not available. Please load TablixJS before this plugin.');\r\n    return;\r\n  }\r\n  \r\n  // Ensure we have the Table constructor\r\n  const Table = TablixJS.Table || TablixJS.default || TablixJS;\r\n  \r\n  if (typeof Table !== 'function') {\r\n    console.error('TablixJS jQuery plugin: TablixJS Table constructor is not available.');\r\n    return;\r\n  }\r\n\r\n  // Plugin name\r\n  const PLUGIN_NAME = 'tablixJS';\r\n  \r\n  // Data key for storing TablixJS instances\r\n  const DATA_KEY = 'tablixjs-instance';\r\n  \r\n  /**\r\n   * TablixJS jQuery Plugin\r\n   * @param {Object|String} options - Configuration options or method name\r\n   * @param {...*} args - Additional arguments for method calls\r\n   * @returns {jQuery} - jQuery chainable object\r\n   */\r\n  $.fn[PLUGIN_NAME] = function(options, ...args) {\r\n    return this.each(function() {\r\n      const $element = $(this);\r\n      const instance = $element.data(DATA_KEY);\r\n      \r\n      // If options is a string, treat it as a method call\r\n      if (typeof options === 'string') {\r\n        handleMethodCall($element, instance, options, args);\r\n      } else {\r\n        // Initialize new instance\r\n        handleInitialization($element, instance, options);\r\n      }\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * Handle method calls on existing instances\r\n   * @param {jQuery} $element - jQuery element\r\n   * @param {Table} instance - TablixJS instance\r\n   * @param {String} methodName - Method to call\r\n   * @param {Array} args - Method arguments\r\n   */\r\n  function handleMethodCall($element, instance, methodName, args) {\r\n    if (!instance) {\r\n      console.error(`TablixJS: Cannot call method \"${methodName}\" on uninitialized element.`);\r\n      return;\r\n    }\r\n    \r\n    switch (methodName) {\r\n      case 'reload':\r\n      case 'loadData':\r\n        if (args.length > 0) {\r\n          instance.loadData(args[0]);\r\n        } else {\r\n          console.error('TablixJS: reload/loadData method requires data parameter.');\r\n        }\r\n        break;\r\n        \r\n      case 'destroy':\r\n        instance.destroy();\r\n        $element.removeData(DATA_KEY);\r\n        break;\r\n        \r\n      case 'refresh':\r\n      case 'refreshTable':\r\n        instance.refreshTable();\r\n        break;\r\n        \r\n      case 'getData':\r\n        return instance.getData();\r\n        \r\n      case 'getOriginalData':\r\n        return instance.getOriginalData();\r\n        \r\n      case 'getSelectedData':\r\n        return instance.getSelectedData();\r\n        \r\n      case 'getSelectedIds':\r\n        return instance.getSelectedIds();\r\n        \r\n      case 'selectRows':\r\n        if (args.length > 0) {\r\n          instance.selectRows(args[0]);\r\n        }\r\n        break;\r\n        \r\n      case 'deselectRows':\r\n        if (args.length > 0) {\r\n          instance.deselectRows(args[0]);\r\n        }\r\n        break;\r\n        \r\n      case 'clearSelection':\r\n        instance.clearSelection();\r\n        break;\r\n        \r\n      case 'selectAllRows':\r\n        return instance.selectAllRows();\r\n        \r\n      case 'filter':\r\n        if (args.length > 0) {\r\n          instance.filter(args[0]);\r\n        }\r\n        break;\r\n        \r\n      case 'applyFilter':\r\n        if (args.length >= 2) {\r\n          instance.applyFilter(args[0], args[1]);\r\n        }\r\n        break;\r\n        \r\n      case 'clearFilter':\r\n        if (args.length > 0) {\r\n          instance.clearFilter(args[0]);\r\n        }\r\n        break;\r\n        \r\n      case 'clearAllFilters':\r\n        instance.clearAllFilters();\r\n        break;\r\n        \r\n      case 'sort':\r\n        if (args.length > 0) {\r\n          instance.sort(args[0], args[1]);\r\n        }\r\n        break;\r\n        \r\n      case 'toggleSort':\r\n        if (args.length > 0) {\r\n          instance.toggleSort(args[0]);\r\n        }\r\n        break;\r\n        \r\n      case 'clearSorting':\r\n        instance.clearSorting();\r\n        break;\r\n        \r\n      case 'setSearchTerm':\r\n        if (args.length > 0) {\r\n          instance.setSearchTerm(args[0]);\r\n        }\r\n        break;\r\n        \r\n      case 'clearSearch':\r\n        instance.clearSearch();\r\n        break;\r\n        \r\n      case 'nextPage':\r\n        instance.nextPage();\r\n        break;\r\n        \r\n      case 'prevPage':\r\n        instance.prevPage();\r\n        break;\r\n        \r\n      case 'firstPage':\r\n        instance.firstPage();\r\n        break;\r\n        \r\n      case 'lastPage':\r\n        instance.lastPage();\r\n        break;\r\n        \r\n      case 'goToPage':\r\n        if (args.length > 0) {\r\n          instance.goToPage(args[0]);\r\n        }\r\n        break;\r\n        \r\n      case 'changePageSize':\r\n        if (args.length > 0) {\r\n          instance.changePageSize(args[0]);\r\n        }\r\n        break;\r\n        \r\n      case 'getPaginationInfo':\r\n        return instance.getPaginationInfo();\r\n        \r\n      case 'setLanguage':\r\n        if (args.length > 0) {\r\n          instance.setLanguage(args[0]);\r\n        }\r\n        break;\r\n        \r\n      case 'getCurrentLanguage':\r\n        return instance.getCurrentLanguage();\r\n        \r\n      case 'getAvailableLanguages':\r\n        return instance.getAvailableLanguages();\r\n        \r\n      case 'setOptions':\r\n        if (args.length > 0) {\r\n          instance.setOptions(args[0]);\r\n        }\r\n        break;\r\n        \r\n      case 'getOptions':\r\n        return instance.getOptions();\r\n        \r\n      case 'on':\r\n        if (args.length >= 2) {\r\n          instance.on(args[0], args[1]);\r\n        }\r\n        break;\r\n        \r\n      case 'off':\r\n        if (args.length >= 2) {\r\n          instance.off(args[0], args[1]);\r\n        }\r\n        break;\r\n        \r\n      case 'trigger':\r\n        if (args.length >= 1) {\r\n          instance.trigger(args[0], args[1]);\r\n        }\r\n        break;\r\n        \r\n      case 'getInstance':\r\n        return instance;\r\n        \r\n      default:\r\n        console.error(`TablixJS: Unknown method \"${methodName}\".`);\r\n        break;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle initialization of new TablixJS instances\r\n   * @param {jQuery} $element - jQuery element\r\n   * @param {Table} existingInstance - Existing TablixJS instance (if any)\r\n   * @param {Object} options - Configuration options\r\n   */\r\n  function handleInitialization($element, existingInstance, options = {}) {\r\n    // If instance already exists, destroy it first\r\n    if (existingInstance) {\r\n      console.warn('TablixJS: Reinitializing existing table instance.');\r\n      existingInstance.destroy();\r\n    }\r\n    \r\n    // Normalize options structure\r\n    const normalizedOptions = normalizeOptions(options);\r\n    \r\n    try {\r\n      // Create new TablixJS instance\r\n      const instance = new Table($element[0], normalizedOptions);\r\n      \r\n      // Store instance reference\r\n      $element.data(DATA_KEY, instance);\r\n      \r\n      // Set up jQuery-specific event forwarding\r\n      setupJQueryEventForwarding($element, instance);\r\n      \r\n    } catch (error) {\r\n      console.error('TablixJS: Failed to initialize table:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Normalize options from jQuery-style to TablixJS-style\r\n   * @param {Object} options - jQuery plugin options\r\n   * @returns {Object} - Normalized TablixJS options\r\n   */\r\n  function normalizeOptions(options = {}) {\r\n    // Handle different option structures for backward compatibility\r\n    const normalized = { ...options };\r\n    \r\n    // If data is provided at root level, keep it there\r\n    if (options.data) {\r\n      normalized.data = options.data;\r\n    }\r\n    \r\n    // If columns is provided at root level, keep it there\r\n    if (options.columns) {\r\n      normalized.columns = options.columns;\r\n    }\r\n    \r\n    // If there's an 'options' property, merge it with root level\r\n    if (options.options && typeof options.options === 'object') {\r\n      Object.assign(normalized, options.options);\r\n      delete normalized.options; // Remove the nested options property\r\n    }\r\n    \r\n    return normalized;\r\n  }\r\n  \r\n  /**\r\n   * Set up event forwarding from TablixJS to jQuery events\r\n   * @param {jQuery} $element - jQuery element\r\n   * @param {Table} instance - TablixJS instance\r\n   */\r\n  function setupJQueryEventForwarding($element, instance) {\r\n    // Map of TablixJS events to jQuery events\r\n    const eventMap = {\r\n      'afterLoad': 'tablixjs:afterLoad',\r\n      'beforeLoad': 'tablixjs:beforeLoad',\r\n      'loadError': 'tablixjs:loadError',\r\n      'afterFilter': 'tablixjs:afterFilter',\r\n      'afterSort': 'tablixjs:afterSort',\r\n      'afterPageChange': 'tablixjs:afterPageChange',\r\n      'afterSearch': 'tablixjs:afterSearch',\r\n      'selectionChanged': 'tablixjs:selectionChanged',\r\n      'selectAll': 'tablixjs:selectAll',\r\n      'rowSelected': 'tablixjs:rowSelected',\r\n      'rowDeselected': 'tablixjs:rowDeselected'\r\n    };\r\n    \r\n    // Forward TablixJS events to jQuery events\r\n    Object.keys(eventMap).forEach(tablixEvent => {\r\n      const jqueryEvent = eventMap[tablixEvent];\r\n      instance.on(tablixEvent, (data) => {\r\n        $element.trigger(jqueryEvent, [data, instance]);\r\n      });\r\n    });\r\n  }\r\n  \r\n  // Static methods and properties\r\n  $.fn[PLUGIN_NAME].version = '0.1.1';\r\n  $.fn[PLUGIN_NAME].defaults = {};\r\n  \r\n  /**\r\n   * Get TablixJS instance from jQuery element\r\n   * @param {jQuery|String} element - jQuery element or selector\r\n   * @returns {Table|null} - TablixJS instance or null\r\n   */\r\n  $.fn[PLUGIN_NAME].getInstance = function(element) {\r\n    const $el = $(element);\r\n    return $el.length > 0 ? $el.data(DATA_KEY) : null;\r\n  };\r\n  \r\n  /**\r\n   * Check if element has TablixJS initialized\r\n   * @param {jQuery|String} element - jQuery element or selector\r\n   * @returns {Boolean} - True if initialized\r\n   */\r\n  $.fn[PLUGIN_NAME].isInitialized = function(element) {\r\n    const $el = $(element);\r\n    return $el.length > 0 && !!$el.data(DATA_KEY);\r\n  };\r\n  \r\n  /**\r\n   * Destroy all TablixJS instances on the page\r\n   */\r\n  $.fn[PLUGIN_NAME].destroyAll = function() {\r\n    $(`[data-${DATA_KEY}]`).each(function() {\r\n      const $el = $(this);\r\n      const instance = $el.data(DATA_KEY);\r\n      if (instance) {\r\n        instance.destroy();\r\n        $el.removeData(DATA_KEY);\r\n      }\r\n    });\r\n  };\r\n  \r\n  // Log successful registration\r\n  if (console && console.log) {\r\n    console.log('TablixJS jQuery plugin registered successfully');\r\n  }\r\n})();\r\n"],"names":["isWindow","window","isGlobal","global","$","jQuery","TablixJS","Table","require","default","e","console","warn","error","PLUGIN_NAME","DATA_KEY","fn","options","args","each","$element","instance","data","handleMethodCall","handleInitialization","methodName","length","loadData","destroy","removeData","refreshTable","getData","getOriginalData","getSelectedData","getSelectedIds","selectRows","deselectRows","clearSelection","selectAllRows","filter","applyFilter","clearFilter","clearAllFilters","sort","toggleSort","clearSorting","setSearchTerm","clearSearch","nextPage","prevPage","firstPage","lastPage","goToPage","changePageSize","getPaginationInfo","setLanguage","getCurrentLanguage","getAvailableLanguages","setOptions","getOptions","on","off","trigger","existingInstance","normalizedOptions","normalizeOptions","setupJQueryEventForwarding","normalized","columns","Object","assign","eventMap","keys","forEach","tablixEvent","jqueryEvent","version","defaults","getInstance","element","$el","isInitialized","destroyAll","log"],"mappings":"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"}